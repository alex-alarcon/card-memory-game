{"version":3,"sources":["Components/Button/index.jsx","constants/Levels.js","Containers/Menu/index.jsx","Components/Card/index.jsx","Containers/Board/index.jsx","constants/GameStates.js","utils/deck.js","store/reducers/gameReducer.js","store/reducers/persistReducer.js","store/reducers/mainReducer.js","store/GameContext.jsx","Components/Countdown/index.jsx","Components/Stats/index.jsx","Containers/App/index.jsx","index.jsx"],"names":["Button","_ref","id","onClick","children","rest","Object","objectWithoutProperties","react_default","a","createElement","assign","type","levels","name","numCols","seconds","Menu","onInitGame","className","map","_ref2","Components_Button","concat","key","Card","backSide","frontSide","isSolved","isFlipped","cardClasses","isDisabled","role","aria-pressed","onKeyDown","tabIndex","viewBox","x","y","textAnchor","dy","defaultProps","Board","cards","onFlip","isEnabled","solvedCards","flippedCards","style","--grid-columns","card","includes","isBoardEnabled","Components_Card","GameStates","MENU","PLAYING","FINISHED","shuffleCards","array","toConsumableArray","i","length","j","Math","floor","random","temp","createCards","num","totalCards","Array","keys","initializeDeck","nCards","reduce","acc","push","gameReducer","state","payload","objectSpread","level","gameState","deck","startDate","Date","now","flipped","solved","finishDate","addOne","reduceByOne","checkBestTime","bestTime","timeUsed","round","persistReducer","defineProperty","totalFlips","totalMatches","wrongMatches","wins","abandoned","lost","mainReducer","action","game","persist","Levels","initialState","persistenceSettings","blacklist","GameContext","React","createContext","countdown","Consumer","Countdown","onGameOver","progressBar","fillEl","useRef","_useContext","useContext","addLost","_useState","useState","_useState2","slicedToArray","secondsLeft","setSecondsLeft","displayTimer","useCallback","perc","current","transform","minutes","remainder","display","textContent","useEffect","clearInterval","then","setInterval","ref","pad","number","size","s","String","timeConverter","miliseconds","mili","Stats","props","totals","flips","matches","bestTimes","toLowerCase","index","App","addWin","initGame","resetGame","addAbandon","addOneFlip","clearBoard","finishGame","addOneMatch","enableBoard","disableBoard","addWrongMatch","addFlippedCard","addSolvedCards","removeFlippedCard","handleInitGame","secs","sameCardFlipped","isMatch","clickedCard","find","flippedCard","checkWin","setTimeout","checkGameOver","handleFlip","Fragment","Containers_Menu","Components_Stats","Containers_Board","Components_Countdown","app","_usePersistReducer","usePersistReducer","_usePersistReducer2","dispatch","Provider","value","Containers_App","ReactDOM","render","document","getElementById"],"mappings":"iSAiBeA,MAdf,SAAAC,GAAoD,IAAlCC,EAAkCD,EAAlCC,GAAIC,EAA8BF,EAA9BE,QAASC,EAAqBH,EAArBG,SAAaC,EAAQC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,6BAClD,OACEO,EAAAC,EAAAC,cAAA,SAAAJ,OAAAK,OAAA,CAAQC,KAAK,SAASV,GAAIA,EAAIC,QAASA,GAAaE,GACjDD,ICYQS,EAlBA,CACb,CACEC,KAAM,OACNC,QAAS,EACTC,QAAS,IAEX,CACEF,KAAM,SACNC,QAAS,EACTC,QAAS,IAEX,CACEF,KAAM,OACNC,QAAS,EACTC,QAAS,MCiBEC,MAxBf,SAAAhB,GAAuC,IAAvBiB,EAAuBjB,EAAvBiB,WACd,OADqCZ,OAAAC,EAAA,EAAAD,CAAAL,EAAA,gBAEnCO,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kEACbX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,mCAAb,eACCN,EAAOO,IAAI,SAAAC,GAAA,IAAGP,EAAHO,EAAGP,KAAMC,EAATM,EAASN,QAASC,EAAlBK,EAAkBL,QAAlB,OACVR,EAAAC,EAAAC,cAACY,EAAD,CACEH,UAAU,MACVjB,GAAE,OAAAqB,OAAST,GACXU,IAAG,OAAAD,OAAST,GACZX,QAAS,WACPe,EAAWJ,EAAMC,EAASC,KAG3BF,mBCfX,SAASW,EAATxB,GASGA,EARDC,GAQC,IAPDC,EAOCF,EAPDE,QACAuB,EAMCzB,EANDyB,SAEAC,GAIC1B,EALD2B,SAKC3B,EAJD0B,WACAE,EAGC5B,EAHD4B,UAIMC,GADL7B,EAFD8B,WAECzB,OAAAC,EAAA,EAAAD,CAAAL,EAAA,6EACgB,0CAAAsB,OACdM,EAAwB,GAAZ,YAGf,OACErB,EAAAC,EAAAC,cAAA,OACES,UAAU,0CACVa,KAAK,SACLC,eAAa,QACb9B,QAASA,EACT+B,UAAW,aACXC,SAAU,GAEV3B,EAAAC,EAAAC,cAAA,OAAKS,UAAWW,GACdtB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iIACbX,EAAAC,EAAAC,cAAA,OACES,UAAU,+DACViB,QAAQ,aAER5B,EAAAC,EAAAC,cAAA,QAAM2B,EAAE,MAAMC,EAAE,MAAMC,WAAW,SAASC,GAAG,UAC1Cb,KAIPnB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iIACZO,KAiBXD,EAAKgB,aAAe,CAClBb,UAAU,EACVC,WAAW,EACXE,YAAY,GAGCN,QCzDf,SAASiB,EAATzC,GAQG,IAPD0C,EAOC1C,EAPD0C,MACAC,EAMC3C,EAND2C,OACA7B,EAKCd,EALDc,QACA8B,EAIC5C,EAJD4C,UACAC,EAGC7C,EAHD6C,YACAC,EAEC9C,EAFD8C,aAECzC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,uEACD,OACEO,EAAAC,EAAAC,cAAA,OACES,UAAU,wBACV6B,MAAO,CACLC,iBAAkBlC,IAGnB4B,EAAMvB,IAAI,SAAA8B,GACT,IAAMrB,EAAYkB,EAAaI,SAASD,EAAKhD,IACvC0B,EAAWkB,EAAYK,SAASD,EAAKhD,IACrCkD,EAAiBP,GAAajB,EAEpC,OACEpB,EAAAC,EAAAC,cAAC2C,EAAD,CACEnD,GAAIgD,EAAKhD,GACTU,KAAMsC,EAAKtC,KACXgB,SAAUA,EACVG,WAAYc,EACZnB,SAAUwB,EAAKxB,SACfC,UAAWuB,EAAKvB,UAChBH,IAAG,GAAAD,OAAK2B,EAAKtC,KAAV,KAAAW,OAAkB2B,EAAKhD,IAC1B2B,UAAWA,GAAaD,EACxBzB,QAAS,kBAAOiD,EAAiBR,EAAOM,EAAKhD,IAAM,WAwB/DwC,EAAMD,aAAe,CACnBE,MAAO,GACPG,YAAa,IAGAJ,qCClEAY,EAAA,CACbC,KAAM,OACNC,QAAS,UACTC,SAAU,mBCHN/B,EAAW,IAEXgC,EAAe,SAAAf,GAEnB,IADA,IAAMgB,EAAKrD,OAAAsD,EAAA,EAAAtD,CAAOqC,GACTkB,EAAIF,EAAMG,OAAS,EAAGD,EAAI,EAAGA,GAAK,EAAG,CAC5C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOR,EAAME,GACnBF,EAAME,GAAKF,EAAMI,GACjBJ,EAAMI,GAAKI,EAGb,OAAOR,GAGHS,EAAc,SAAAC,GAClB,IAAMC,EAAcD,EAAMA,EAAO,EAEjC,OADW/D,OAAAsD,EAAA,EAAAtD,CAAOiE,MAAMD,GAAYE,SAIvB,SAASC,EAAeC,GACrC,IAAIxE,EAAK,EACLyC,EAAQyB,EAAYM,GAiBxB,OAhBA/B,EAAQA,EAAMgC,OAAO,SAACC,EAAKhE,GAazB,OAZAgE,EAAIC,KAAK,CACP3E,GAAE,GAAAqB,OAAMrB,GAAM,GACdU,OACAc,WACAC,UAAWf,IAEbgE,EAAIC,KAAK,CACP3E,GAAE,GAAAqB,OAAMrB,GAAM,GACdU,OACAc,WACAC,UAAWf,IAENgE,GACN,IAEIlB,EAAaf,GCpCtB,IAmEemC,EAnEK,SAACC,EAAD9E,GAA8B,IAApBW,EAAoBX,EAApBW,KAAMoE,EAAc/E,EAAd+E,QAClC,OAAQpE,GACN,IAAK,YACH,OAAON,OAAA2E,EAAA,EAAA3E,CAAA,GACFyE,EADL,CAEEG,MAAOF,EAAQE,MACfnE,QAASiE,EAAQjE,QACjBoE,UAAW7B,EAAWE,QACtBxC,QAASgE,EAAQhE,QACjBoE,KAAMX,EAAeO,EAAQjE,SAC7BqC,gBAAgB,EAChBiC,UAAWC,KAAKC,QAEpB,IAAK,aACH,OAAOjF,OAAA2E,EAAA,EAAA3E,CAAA,GACFyE,EADL,CAEEG,MAAO,GACPnE,QAAS,EACTC,QAAS,EACTwE,QAAS,GACTC,OAAQ,GACRL,KAAM,GACNhC,gBAAgB,EAChB+B,UAAW7B,EAAWC,OAE1B,IAAK,cACH,OAAOjD,OAAA2E,EAAA,EAAA3E,CAAA,GACFyE,EADL,CAEES,QAAS,GACTC,OAAQ,KAEZ,IAAK,cACH,OAAOnF,OAAA2E,EAAA,EAAA3E,CAAA,GACFyE,EADL,CAEEW,WAAYV,EAAQU,WACpBP,UAAW7B,EAAWG,WAE1B,IAAK,eACH,OAAOnD,OAAA2E,EAAA,EAAA3E,CAAA,GACFyE,EADL,CAEE3B,gBAAgB,IAEpB,IAAK,gBACH,OAAO9C,OAAA2E,EAAA,EAAA3E,CAAA,GACFyE,EADL,CAEE3B,gBAAgB,IAEpB,IAAK,mBACH,OAAO9C,OAAA2E,EAAA,EAAA3E,CAAA,GACFyE,EADL,CAEES,QAAO,GAAAjE,OAAAjB,OAAAsD,EAAA,EAAAtD,CAAMyE,EAAMS,SAAZ,CAAqBR,EAAQ9E,OAExC,IAAK,sBACH,OAAOI,OAAA2E,EAAA,EAAA3E,CAAA,GACFyE,EADL,CAEES,QAAS,KAEb,IAAK,mBACH,OAAOlF,OAAA2E,EAAA,EAAA3E,CAAA,GACFyE,EADL,CAEEU,OAAM,GAAAlE,OAAAjB,OAAAsD,EAAA,EAAAtD,CAAMyE,EAAMU,QAAZ,CAAoBV,EAAMS,QAAQ,GAAIR,EAAQ9E,OAExD,QACE,OAAO6E,IClEPY,EAAS,SAAAtB,GAAG,OAAIA,EAAM,GAEtBuB,EAAc,SAAAvB,GAAG,OAAIA,EAAM,GAE3BwB,EAAgB,SAACR,EAAWK,EAAYI,GAC5C,IAAMC,EAAW/B,KAAKgC,MAAMN,EAAaL,GACzC,OAAiB,IAAbS,EACKC,EAELA,EAAWD,EACNC,EAEFD,GAwEMG,EArEQ,SAAClB,EAAD9E,GAA8B,IAApBW,EAAoBX,EAApBW,KAAMoE,EAAc/E,EAAd+E,QACrC,OAAQpE,GACN,IAAK,WACH,OAAON,OAAA2E,EAAA,EAAA3E,CAAA,GACFyE,EADLzE,OAAA4F,EAAA,EAAA5F,CAAA,GAEG0E,EAAQE,MAFX5E,OAAA2E,EAAA,EAAA3E,CAAA,GAGOyE,EAAMC,EAAQE,OAHrB,CAIIiB,WAAYR,EAAOZ,EAAMC,EAAQE,OAAOiB,gBAG9C,IAAK,YACH,OAAO7F,OAAA2E,EAAA,EAAA3E,CAAA,GACFyE,EADLzE,OAAA4F,EAAA,EAAA5F,CAAA,GAEG0E,EAAQE,MAFX5E,OAAA2E,EAAA,EAAA3E,CAAA,GAGOyE,EAAMC,EAAQE,OAHrB,CAIIkB,aAAcT,EAAOZ,EAAMC,EAAQE,OAAOkB,kBAGhD,IAAK,kBACH,OAAO9F,OAAA2E,EAAA,EAAA3E,CAAA,GACFyE,EADLzE,OAAA4F,EAAA,EAAA5F,CAAA,GAEG0E,EAAQE,MAFX5E,OAAA2E,EAAA,EAAA3E,CAAA,GAGOyE,EAAMC,EAAQE,OAHrB,CAIImB,aAAcV,EAAOZ,EAAMC,EAAQE,OAAOmB,kBAGhD,IAAK,UACH,OAAO/F,OAAA2E,EAAA,EAAA3E,CAAA,GACFyE,EADLzE,OAAA4F,EAAA,EAAA5F,CAAA,GAEG0E,EAAQE,MAFX5E,OAAA2E,EAAA,EAAA3E,CAAA,GAGOyE,EAAMC,EAAQE,OAHrB,CAIIoB,KAAMX,EAAOZ,EAAMC,EAAQE,OAAOoB,MAClCC,UAAWX,EAAYb,EAAMC,EAAQE,OAAOqB,eAGlD,IAAK,cACH,OAAOjG,OAAA2E,EAAA,EAAA3E,CAAA,GACFyE,EADLzE,OAAA4F,EAAA,EAAA5F,CAAA,GAEG0E,EAAQE,MAFX5E,OAAA2E,EAAA,EAAA3E,CAAA,GAGOyE,EAAMC,EAAQE,OAHrB,CAIIqB,UAAWZ,EAAOZ,EAAMC,EAAQE,OAAOqB,eAG7C,IAAK,WACH,OAAOjG,OAAA2E,EAAA,EAAA3E,CAAA,GACFyE,EADLzE,OAAA4F,EAAA,EAAA5F,CAAA,GAEG0E,EAAQE,MAFX5E,OAAA2E,EAAA,EAAA3E,CAAA,GAGOyE,EAAMC,EAAQE,OAHrB,CAIIsB,KAAMb,EAAOZ,EAAMC,EAAQE,OAAOsB,MAClCD,UAAWX,EAAYb,EAAMC,EAAQE,OAAOqB,eAGlD,IAAK,cACH,OAAOjG,OAAA2E,EAAA,EAAA3E,CAAA,GACFyE,EADLzE,OAAA4F,EAAA,EAAA5F,CAAA,GAEG0E,EAAQE,MAFX5E,OAAA2E,EAAA,EAAA3E,CAAA,GAGOyE,EAAMC,EAAQE,OAHrB,CAIIY,SAAUD,EACRb,EAAQK,UACRL,EAAQU,WACRX,EAAMC,EAAQE,OAAOY,cAI7B,QACE,OAAOf,ICtEE0B,EAPK,SAAC1B,EAAO2B,GAC1B,MAAO,CACLC,KAAM7B,EAAYC,EAAM4B,KAAMD,GAC9BE,QAASX,EAAelB,EAAM6B,QAASF,KCGrC7F,EAASgG,EAAOlC,OACpB,SAACC,EAAKM,GAAN,OAAA5E,OAAA2E,EAAA,EAAA3E,CAAA,GACKsE,EADLtE,OAAA4F,EAAA,EAAA5F,CAAA,GAEG4E,EAAMpE,KAAO,CACZ0F,KAAM,EACNF,KAAM,EACNR,SAAU,EACVS,UAAW,EACXJ,WAAY,EACZC,aAAc,EACdC,aAAc,MAGlB,IAGIS,EAAe,CACnBH,KAAM,CACJzB,MAAO,GACPnE,QAAS,EACTC,QAAS,EACTmE,UAAW7B,EAAWC,KACtBiC,QAAS,GACTC,OAAQ,GACRL,KAAM,GACNhC,gBAAgB,EAChBiC,UAAW,EACXK,WAAY,GAEdkB,QAAQtG,OAAA2E,EAAA,EAAA3E,CAAA,GACHO,IAIDkG,EAAsB,CAC1BvF,IAAK,YACLwF,UAAW,CACTL,MAAM,IAIJM,EAAcC,IAAMC,cAAcL,GAoMxC,ICxOIM,EDwOiBH,EAAYI,eCtOjC,SAASC,EAATrH,GAA2DA,EAAtC4C,UAAsC,IAA3B0E,EAA2BtH,EAA3BsH,WAAYC,EAAevH,EAAfuH,YACpCC,EAASC,iBAAO,MADmCC,EAE/BC,qBAAWX,GAA7BY,EAFiDF,EAEjDE,QAASlB,EAFwCgB,EAExChB,KAFwCmB,EAGnBC,mBAASpB,EAAK3F,SAHKgH,EAAA1H,OAAA2H,EAAA,EAAA3H,CAAAwH,EAAA,GAGlDI,EAHkDF,EAAA,GAGrCG,EAHqCH,EAAA,GAKnDI,EAAeC,sBAAY,WAC/B,GAAIb,EAAa,CACf,IAAMc,EAAOJ,EAAcvB,EAAK3F,QAChCyG,EAAOc,QAAQvF,MAAMwF,UAArB,UAAAjH,OAA2C+G,EAA3C,SACK,CACL,IAAMG,EAAUzE,KAAKC,MAAMiE,EAAc,IACnCQ,EAAYR,EAAc,GAC1BS,EAAO,GAAApH,OAAMkH,EAAN,KAAAlH,OAAiBmH,EAAY,GAAK,IAAM,IAAxCnH,OAA6CmH,GAC1DjB,EAAOc,QAAQK,YAAcD,IAE9B,CAAChC,EAAK3F,QAASwG,EAAaU,IAsC/B,OApCAW,oBAAU,WACRC,cAAc1B,GAEd,IAAM2B,EAAOpC,EAAKtB,UAA2B,IAAfsB,EAAK3F,QAmBnC,OAlBAoH,IAEAhB,EAAY4B,YAAY,WAEtB,GADAb,EAAenE,KAAKgC,OAAO+C,EAAOzD,KAAKC,OAAS,MAC5C2C,GAAe,EAGjB,OAFAX,SACAuB,cAAc1B,GAIZT,EAAKxB,YAAc7B,EAAWG,SAKlC2E,IAJEU,cAAc1B,IAKf,KAEI,WACL0B,cAAc1B,KAEf,CACDT,EAAK3F,QACL2F,EAAKxB,UACLiD,EACAb,EACAZ,EAAKtB,UACL6C,EACAvB,EAAKzB,MACL2C,IAIArH,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACZqG,GACChH,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8DACbX,EAAAC,EAAAC,cAAA,QACES,UAAU,kDACV8H,IAAKxB,KAIVD,GACChH,EAAAC,EAAAC,cAAA,KAAGS,UAAU,8BAA8B8H,IAAKxB,KAYxDH,EAAU7E,aAAe,CACvB+E,aAAa,GAGAF,QC1FT4B,SAAM,SAACC,EAAQC,GAEnB,IADA,IAAIC,EAAIC,OAAOH,GACRE,EAAEvF,QAAUsF,GAAQ,IACzBC,EAAC,IAAA9H,OAAO8H,GAEV,OAAOA,IAEHE,EAAgB,SAAAC,GACpB,IAAMf,EAAUzE,KAAKC,MAAMuF,EAAc,KACnCxI,EAAUgD,KAAKC,MAAOuF,EAAc,IAAS,KAC7CC,EAAOD,EAAc,IAE3B,SAAAjI,OAAU2H,EAAIT,EAAS,GAAvB,KAAAlH,OAA6B2H,EAAIlI,EAAS,GAA1C,KAAAO,OAAgD2H,EAAIO,EAAM,KAsI7CC,MAnIf,SAAeC,GAAO,IACZ/C,EAAYgB,qBAAWX,GAAvBL,QACF/F,EAASP,OAAOkE,KAAKoC,GAErBgD,EAAS/I,EAAO8D,OACpB,SAACC,EAAKM,GAQJ,OAPAN,EAAI0B,MAAQM,EAAQ1B,GAAOoB,KAC3B1B,EAAI4B,MAAQI,EAAQ1B,GAAOsB,KAC3B5B,EAAI2B,WAAaK,EAAQ1B,GAAOqB,UAChC3B,EAAIiF,OAASjD,EAAQ1B,GAAOiB,WAC5BvB,EAAIyB,cAAgBO,EAAQ1B,GAAOmB,aACnCzB,EAAIkF,SAAWlD,EAAQ1B,GAAOkB,aAEvBxB,GAET,CAAE0B,KAAM,EAAGE,KAAM,EAAGD,UAAW,EAAGsD,MAAO,EAAGxD,aAAc,EAAGyD,QAAS,IAGlEC,EAAYlJ,EAAOO,IAAI,SAAA8D,GAC3B,OACE1E,EAAAC,EAAAC,cAAA,OAAKS,UAAU,OAAOK,IAAK0D,GACzB1E,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBAAf,QAAAI,OAAuC2D,EAAM8E,cAA7C,OACAxJ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gDACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8BAAf,GAAAI,OACMgI,EAAc3C,EAAQ1B,GAAOY,gBAO3C,OACEtF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kDACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,+BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,cACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBAAf,SACAX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gDACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8BAA8ByI,EAAOtD,MACpD9F,EAAAC,EAAAC,cAAA,OAAKS,UAAU,+BACZN,EAAOO,IAAI,SAAA8D,GAAK,OACf1E,EAAAC,EAAAC,cAAA,QAAMS,UAAU,OAAOK,IAAG,OAAAD,OAAS2D,IAAnC,GAAA3D,OACM2D,EAAM,GADZ,MAAA3D,OACmBqF,EAAQ1B,GAAOoB,YAO1C9F,EAAAC,EAAAC,cAAA,OAAKS,UAAU,cACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBAAf,SACAX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gCACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8BAA8ByI,EAAOpD,MACpDhG,EAAAC,EAAAC,cAAA,OAAKS,UAAU,+BACZN,EAAOO,IAAI,SAAA8D,GAAK,OACf1E,EAAAC,EAAAC,cAAA,QAAMS,UAAU,OAAOK,IAAG,OAAAD,OAAS2D,IAAnC,GAAA3D,OACM2D,EAAM,GADZ,MAAA3D,OACmBqF,EAAQ1B,GAAOsB,YAO1ChG,EAAAC,EAAAC,cAAA,OAAKS,UAAU,cACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBAAf,SACAX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gCACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8BACZyI,EAAOrD,WAEV/F,EAAAC,EAAAC,cAAA,OAAKS,UAAU,+BACZN,EAAOO,IAAI,SAAA8D,GAAK,OACf1E,EAAAC,EAAAC,cAAA,QAAMS,UAAU,OAAOK,IAAG,OAAAD,OAAS2D,IAAnC,GAAA3D,OACM2D,EAAM,GADZ,MAAA3D,OACmBqF,EAAQ1B,GAAOqB,kBAQ5C/F,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,cACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBAAf,UACAX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gCACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8BAA8ByI,EAAOC,OACpDrJ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,+BACZN,EAAOO,IAAI,SAAA8D,GAAK,OACf1E,EAAAC,EAAAC,cAAA,QAAMS,UAAU,OAAOK,IAAG,QAAAD,OAAU2D,IAApC,GAAA3D,OACM2D,EAAM,GADZ,MAAA3D,OACmBqF,EAAQ1B,GAAOiB,kBAO1C3F,EAAAC,EAAAC,cAAA,OAAKS,UAAU,cACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBAAf,kBACAX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gCACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8BACZyI,EAAOvD,cAEV7F,EAAAC,EAAAC,cAAA,OAAKS,UAAU,+BACZN,EAAOO,IAAI,SAAA8D,GAAK,OACf1E,EAAAC,EAAAC,cAAA,QAAMS,UAAU,OAAOK,IAAG,gBAAAD,OAAkB2D,IAA5C,GAAA3D,OACM2D,EAAM,GADZ,MAAA3D,OACmBqF,EAAQ1B,GAAOmB,oBAO1C7F,EAAAC,EAAAC,cAAA,OAAKS,UAAU,cACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBAAf,YACAX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gCACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8BAA8ByI,EAAOE,SACpDtJ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,+BACZN,EAAOO,IAAI,SAAC8D,EAAO+E,GAAR,OACVzJ,EAAAC,EAAAC,cAAA,QAAMS,UAAU,OAAOK,IAAG,gBAAAD,OAAkB2D,IAA5C,GAAA3D,OACM2D,EAAM,GADZ,MAAA3D,OACmBqF,EAAQ1B,GAAOkB,sBAQ9C5F,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBAAoB4I,KC0B1BG,MAjKf,WAAe,IAAAvC,EAkBTC,qBAAWX,GAhBbN,EAFWgB,EAEXhB,KACAwD,EAHWxC,EAGXwC,OACAtC,EAJWF,EAIXE,QACAuC,EALWzC,EAKXyC,SACAC,EANW1C,EAMX0C,UACAC,EAPW3C,EAOX2C,WACAC,EARW5C,EAQX4C,WACAC,EATW7C,EASX6C,WACAC,EAVW9C,EAUX8C,WACAC,EAXW/C,EAWX+C,YACAC,EAZWhD,EAYXgD,YACAC,EAbWjD,EAaXiD,aACAC,EAdWlD,EAcXkD,cACAC,EAfWnD,EAeXmD,eACAC,EAhBWpD,EAgBXoD,eACAC,EAjBWrD,EAiBXqD,kBAGIC,EAAiB5C,sBACrB,SAACnD,EAAOb,EAAK6G,GACXd,EAASlF,EAAOb,EAAK6G,GACrBZ,EAAWpF,IAEb,CAACoF,EAAYF,IAGTe,EAAkB9C,sBAAY,SAAAnI,GAAE,OAAIyG,EAAKnB,QAAQrC,SAASjD,IAAK,CACnEyG,EAAKnB,UAGD4F,EAAU/C,sBACd,SAAAnI,GACE,IAAMmL,EAAc1E,EAAKvB,KAAKkG,KAAK,SAAApI,GAAI,OAAIA,EAAKhD,KAAOA,IACjDqL,EAAc5E,EAAKvB,KAAKkG,KAAK,SAAApI,GAAI,OAAIA,EAAKhD,KAAOyG,EAAKnB,QAAQ,KACpE,OAAO6F,EAAYzK,OAAS2K,EAAY3K,MAE1C,CAAC+F,EAAKvB,KAAMuB,EAAKnB,UAGbgG,EAAWnD,sBAAY,WACvB1B,EAAKlB,OAAO3B,SAAW6C,EAAK5F,QAAU4F,EAAK5F,QAAU,IACvDoJ,EAAOxD,EAAKzB,OACZuG,WAAW,WACTjB,KACC,KACHiB,WAAW,WACThB,EAAW9D,EAAKzB,MAAOyB,EAAKtB,UAAWC,KAAKC,MAAQ,KACpD8E,KACC,QAEJ,CACDF,EACAK,EACAC,EACA9D,EAAKzB,MACLyB,EAAK5F,QACL4F,EAAKlB,OAAO3B,OACZ6C,EAAKtB,UACLgF,IAGIqB,EAAgBrD,sBAAY,WAE9B1B,EAAKlB,OAAO3B,SAAW6C,EAAK5F,QAAU4F,EAAK5F,QAAU,GACrD4F,EAAKxB,YAAc7B,EAAWE,UAE9BqE,EAAQlB,EAAKzB,OACbuG,WAAW,WACTjB,KACC,KACHiB,WAAW,WACTpB,KACC,QAEJ,CACDxC,EACA2C,EACA7D,EAAKxB,UACLwB,EAAKzB,MACLyB,EAAK5F,QACL4F,EAAKlB,OAAO3B,OACZuG,IAGIsB,EAAatD,sBACjB,SAAAnI,GAEE,GADA0K,IAC4B,IAAxBjE,EAAKnB,QAAQ1B,OACfyG,EAAW5D,EAAKzB,OAChB4F,EAAe5K,GACfyK,QACK,CAEL,GADAJ,EAAW5D,EAAKzB,OACZiG,EAAgBjL,GAElB,YADAyK,IAGFG,EAAe5K,GACXkL,EAAQlL,IACVwK,EAAY/D,EAAKzB,OACjB6F,EAAe7K,GACf8K,IACAQ,IACAb,MAEAE,EAAclE,EAAKzB,OACnBuG,WAAW,WACTT,KACC,KACHL,OAIN,CACEG,EACAP,EACAG,EACAK,EACAF,EACAW,EACAZ,EACAD,EACAhE,EACAyE,EACAJ,EACAG,IAIJ,OACE3K,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mEACZwF,EAAKxB,YAAc7B,EAAWC,MAC7B/C,EAAAC,EAAAC,cAACF,EAAAC,EAAMmL,SAAP,KACEpL,EAAAC,EAAAC,cAACmL,EAAD,CAAM3K,WAAY+J,IAClBzK,EAAAC,EAAAC,cAACoL,EAAD,OAGHnF,EAAKxB,YAAc7B,EAAWE,SAC7BhD,EAAAC,EAAAC,cAACF,EAAAC,EAAMmL,SAAP,KACEpL,EAAAC,EAAAC,cAACqL,EAAD,CACEpJ,MAAOgE,EAAKvB,KACZxC,OAAQ+I,EACR5K,QAAS4F,EAAK5F,QACd+B,YAAa6D,EAAKlB,OAClB1C,aAAc4D,EAAKnB,QACnB3C,UAAW8D,EAAKvD,iBAElB5C,EAAAC,EAAAC,cAACsL,EAAD,CACExE,aAAa,EACbxG,QAAS2F,EAAK3F,QACduG,WAAYmE,EACZ7I,UAAW8D,EAAKxB,YAAc7B,EAAWE,aC7J/CyI,EACJzL,EAAAC,EAAAC,cJ2CF,SAAAT,GAAoC,IAAZG,EAAYH,EAAZG,SAAY8L,EACRC,4BACxBpF,EACAN,EACAK,GAJgCsF,EAAA9L,OAAA2H,EAAA,EAAA3H,CAAA4L,EAAA,GAC3BnH,EAD2BqH,EAAA,GACpBC,EADoBD,EAAA,GAO5BhC,EAAW/B,sBACf,SAACnD,EAAOnE,EAASC,GACfqL,EAAS,CACPzL,KAAM,YACNoE,QAAS,CACPE,QACAnE,UACAC,cAIN,CAACqL,IAGGhC,EAAYhC,sBAAY,WAC5BgE,EAAS,CACPzL,KAAM,gBAEP,CAACyL,IAEE7B,EAAanC,sBAAY,WAC7BgE,EAAS,CACPzL,KAAM,iBAEP,CAACyL,IAEE5B,EAAapC,sBACjB,SAACnD,EAAOG,EAAWK,GACjB2G,EAAS,CACPzL,KAAM,cACNoE,QAAS,CACPK,YACAK,aACAR,YAIN,CAACmH,IAGG1B,EAActC,sBAAY,WAC9BgE,EAAS,CACPzL,KAAM,kBAEP,CAACyL,IAEEzB,EAAevC,sBAAY,WAC/BgE,EAAS,CACPzL,KAAM,mBAEP,CAACyL,IAEE9B,EAAalC,sBACjB,SAAAnD,GACEmH,EAAS,CACPzL,KAAM,WACNoE,QAAS,CACPE,YAIN,CAACmH,IAGG3B,EAAcrC,sBAClB,SAAAnD,GACEmH,EAAS,CACPzL,KAAM,YACNoE,QAAS,CACPE,YAIN,CAACmH,IAGGxB,EAAgBxC,sBACpB,SAAAnD,GACEmH,EAAS,CACPzL,KAAM,kBACNoE,QAAS,CACPE,YAIN,CAACmH,IAGGlC,EAAS9B,sBACb,SAAAnD,GACEmH,EAAS,CACPzL,KAAM,UACNoE,QAAS,CACPE,YAIN,CAACmH,IAGG/B,EAAajC,sBACjB,SAAAnD,GACEmH,EAAS,CACPzL,KAAM,cACNoE,QAAS,CACPE,YAIN,CAACmH,IAGGxE,EAAUQ,sBACd,SAAAnD,GACEmH,EAAS,CACPzL,KAAM,WACNoE,QAAS,CACPE,YAIN,CAACmH,IAGGvB,EAAiBzC,sBACrB,SAAAnI,GACEmM,EAAS,CACPzL,KAAM,mBACNoE,QAAS,CACP9E,SAIN,CAACmM,IAGGrB,EAAoB3C,sBACxB,SAAAnI,GACEmM,EAAS,CACPzL,KAAM,yBAGV,CAACyL,IAGGtB,EAAiB1C,sBACrB,SAAAnI,GACEmM,EAAS,CACPzL,KAAM,mBACNoE,QAAS,CACP9E,SAIN,CAACmM,IAGH,OACE7L,EAAAC,EAAAC,cAACuG,EAAYqF,SAAb,CACEC,MAAKjM,OAAA2E,EAAA,EAAA3E,CAAA,CACH6J,SACAtC,UACAuC,WACAC,YACAC,aACAC,aACAC,aACAC,aACAC,cACAC,cACAC,eACAC,gBACAC,iBACAC,iBACAC,qBACGjG,IAGJ3E,IIpOL,KACEI,EAAAC,EAAAC,cAAC8L,EAAD,OAGJC,IAASC,OAAOT,EAAKU,SAASC,eAAe","file":"static/js/main.889e0cf0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Button({ id, onClick, children, ...rest }) {\n  return (\n    <button type=\"button\" id={id} onClick={onClick} {...rest}>\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Button;\n","const levels = [\n  {\n    name: 'EASY',\n    numCols: 2,\n    seconds: 60,\n  },\n  {\n    name: 'MEDIUM',\n    numCols: 6,\n    seconds: 90,\n  },\n  {\n    name: 'HARD',\n    numCols: 8,\n    seconds: 120,\n  },\n];\n\nexport default levels;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport Button from '../../Components/Button';\n\nimport levels from '../../constants/Levels';\n\nfunction Menu({ onInitGame, ...rest }) {\n  return (\n    <div className=\"Menu flex flex-col items-center justify-center w-full max-w-xl\">\n      <p className=\"my-8 font-bold uppercase italic\">Memory Game</p>\n      {levels.map(({ name, numCols, seconds }) => (\n        <Button\n          className=\"btn\"\n          id={`btn-${name}`}\n          key={`btn-${name}`}\n          onClick={() => {\n            onInitGame(name, numCols, seconds);\n          }}\n        >\n          {name}\n        </Button>\n      ))}\n    </div>\n  );\n}\n\nMenu.propTypes = {\n  onInitGame: PropTypes.func.isRequired,\n};\n\nexport default Menu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.css';\n\nfunction Card({\n  id,\n  onClick,\n  backSide,\n  isSolved,\n  frontSide,\n  isFlipped,\n  isDisabled,\n  ...rest\n}) {\n  const cardClasses = `Card absolute w-full h-full rounded-lg ${\n    !isFlipped ? 'flipped' : ''\n  }`;\n\n  return (\n    <div\n      className=\"Card__Container outline-none rounded-lg\"\n      role=\"button\"\n      aria-pressed=\"false\"\n      onClick={onClick}\n      onKeyDown={() => {}}\n      tabIndex={0}\n    >\n      <div className={cardClasses}>\n        <div className=\"Card__Front absolute flex items-center justify-center w-full h-full rounded-lg text-center leading-loose font-bold bg-red-500\">\n          <svg\n            className=\"fill-current bg-blue-300 text-white w-full h-full rounded-lg\"\n            viewBox=\"0 0 24 24\"\n          >\n            <text x=\"50%\" y=\"50%\" textAnchor=\"middle\" dy=\"0.36em\">\n              {frontSide}\n            </text>\n          </svg>\n        </div>\n        <div className=\"Card__Back absolute flex items-center justify-center w-full h-full rounded-lg text-center leading-loose font-bold bg-blue-500\">\n          {backSide}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  isSolved: PropTypes.bool,\n  isFlipped: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  id: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  backSide: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n  frontSide: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n};\n\nCard.defaultProps = {\n  isSolved: false,\n  isFlipped: false,\n  isDisabled: false,\n};\n\nexport default Card;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport './index.css';\nimport Card from '../../Components/Card';\n\nfunction Board({\n  cards,\n  onFlip,\n  numCols,\n  isEnabled,\n  solvedCards,\n  flippedCards,\n  ...rest\n}) {\n  return (\n    <div\n      className=\"Board w-full max-w-xl\"\n      style={{\n        '--grid-columns': numCols,\n      }}\n    >\n      {cards.map(card => {\n        const isFlipped = flippedCards.includes(card.id);\n        const isSolved = solvedCards.includes(card.id);\n        const isBoardEnabled = isEnabled || isSolved;\n\n        return (\n          <Card\n            id={card.id}\n            type={card.type}\n            isSolved={isSolved}\n            isDisabled={isEnabled}\n            backSide={card.backSide}\n            frontSide={card.frontSide}\n            key={`${card.type}-${card.id}`}\n            isFlipped={isFlipped || isSolved}\n            onClick={() => (isBoardEnabled ? onFlip(card.id) : null)}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nBoard.propTypes = {\n  onFlip: PropTypes.func.isRequired,\n  isEnabled: PropTypes.bool.isRequired,\n  numCols: PropTypes.number.isRequired,\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      backSide: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n      frontSide: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n    }),\n  ),\n  solvedCards: PropTypes.arrayOf(PropTypes.string),\n  flippedCards: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nBoard.defaultProps = {\n  cards: [],\n  solvedCards: [],\n};\n\nexport default Board;\n","export default {\n  MENU: 'MENU',\n  PLAYING: 'PLAYING',\n  FINISHED: 'FINISHED',\n};\n","const backSide = ' ';\n\nconst shuffleCards = cards => {\n  const array = [...cards];\n  for (let i = array.length - 1; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  return array;\n};\n\nconst createCards = num => {\n  const totalCards = (num * num) / 2;\n  const cards = [...Array(totalCards).keys()];\n  return cards;\n};\n\nexport default function initializeDeck(nCards) {\n  let id = 0;\n  let cards = createCards(nCards);\n  cards = cards.reduce((acc, type) => {\n    acc.push({\n      id: `${(id += 1)}`,\n      type,\n      backSide,\n      frontSide: type,\n    });\n    acc.push({\n      id: `${(id += 1)}`,\n      type,\n      backSide,\n      frontSide: type,\n    });\n    return acc;\n  }, []);\n\n  return shuffleCards(cards);\n}\n","import GameStates from '../../constants/GameStates';\nimport initializeDeck from '../../utils/deck';\n\nconst gameReducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'INIT_GAME':\n      return {\n        ...state,\n        level: payload.level,\n        numCols: payload.numCols,\n        gameState: GameStates.PLAYING,\n        seconds: payload.seconds,\n        deck: initializeDeck(payload.numCols),\n        isBoardEnabled: true,\n        startDate: Date.now(),\n      };\n    case 'RESET_GAME':\n      return {\n        ...state,\n        level: '',\n        numCols: 0,\n        seconds: 0,\n        flipped: [],\n        solved: [],\n        deck: [],\n        isBoardEnabled: false,\n        gameState: GameStates.MENU,\n      };\n    case 'CLEAR_BOARD':\n      return {\n        ...state,\n        flipped: [],\n        solved: [],\n      };\n    case 'FINISH_GAME':\n      return {\n        ...state,\n        finishDate: payload.finishDate,\n        gameState: GameStates.FINISHED,\n      };\n    case 'ENABLE_BOARD':\n      return {\n        ...state,\n        isBoardEnabled: true,\n      };\n    case 'DISABLE_BOARD':\n      return {\n        ...state,\n        isBoardEnabled: false,\n      };\n    case 'ADD_FLIPPED_CARD':\n      return {\n        ...state,\n        flipped: [...state.flipped, payload.id],\n      };\n    case 'REMOVE_FLIPPED_CARD':\n      return {\n        ...state,\n        flipped: [],\n      };\n    case 'ADD_SOLVED_CARDS':\n      return {\n        ...state,\n        solved: [...state.solved, state.flipped[0], payload.id],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default gameReducer;\n","const addOne = num => num + 1;\n\nconst reduceByOne = num => num - 1;\n\nconst checkBestTime = (startDate, finishDate, bestTime) => {\n  const timeUsed = Math.round(finishDate - startDate);\n  if (bestTime === 0) {\n    return timeUsed;\n  }\n  if (timeUsed < bestTime) {\n    return timeUsed;\n  }\n  return bestTime;\n};\n\nconst persistReducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'ADD_FLIP':\n      return {\n        ...state,\n        [payload.level]: {\n          ...state[payload.level],\n          totalFlips: addOne(state[payload.level].totalFlips),\n        },\n      };\n    case 'ADD_MATCH':\n      return {\n        ...state,\n        [payload.level]: {\n          ...state[payload.level],\n          totalMatches: addOne(state[payload.level].totalMatches),\n        },\n      };\n    case 'ADD_WRONG_MATCH':\n      return {\n        ...state,\n        [payload.level]: {\n          ...state[payload.level],\n          wrongMatches: addOne(state[payload.level].wrongMatches),\n        },\n      };\n    case 'ADD_WIN':\n      return {\n        ...state,\n        [payload.level]: {\n          ...state[payload.level],\n          wins: addOne(state[payload.level].wins),\n          abandoned: reduceByOne(state[payload.level].abandoned),\n        },\n      };\n    case 'ADD_ABANDON':\n      return {\n        ...state,\n        [payload.level]: {\n          ...state[payload.level],\n          abandoned: addOne(state[payload.level].abandoned),\n        },\n      };\n    case 'ADD_LOST':\n      return {\n        ...state,\n        [payload.level]: {\n          ...state[payload.level],\n          lost: addOne(state[payload.level].lost),\n          abandoned: reduceByOne(state[payload.level].abandoned),\n        },\n      };\n    case 'FINISH_GAME':\n      return {\n        ...state,\n        [payload.level]: {\n          ...state[payload.level],\n          bestTime: checkBestTime(\n            payload.startDate,\n            payload.finishDate,\n            state[payload.level].bestTime,\n          ),\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default persistReducer;\n","import gameReducer from './gameReducer';\nimport persistReducer from './persistReducer';\n\nconst mainReducer = (state, action) => {\n  return {\n    game: gameReducer(state.game, action),\n    persist: persistReducer(state.persist, action),\n  };\n};\n\nexport default mainReducer;\n","import React, { useCallback } from 'react';\nimport { usePersistReducer } from 'use-persist';\nimport { PropTypes } from 'prop-types';\n\nimport GameStates from '../constants/GameStates';\nimport Levels from '../constants/Levels';\n\nimport mainReducer from './reducers/mainReducer';\n\nconst levels = Levels.reduce(\n  (acc, level) => ({\n    ...acc,\n    [level.name]: {\n      lost: 0,\n      wins: 0,\n      bestTime: 0,\n      abandoned: 0,\n      totalFlips: 0,\n      totalMatches: 0,\n      wrongMatches: 0,\n    },\n  }),\n  {},\n);\n\nconst initialState = {\n  game: {\n    level: '',\n    numCols: 0,\n    seconds: 0,\n    gameState: GameStates.MENU,\n    flipped: [],\n    solved: [],\n    deck: [],\n    isBoardEnabled: false,\n    startDate: 0,\n    finishDate: 0,\n  },\n  persist: {\n    ...levels,\n  },\n};\n\nconst persistenceSettings = {\n  key: 'card-game',\n  blacklist: {\n    game: true,\n  },\n};\n\nconst GameContext = React.createContext(initialState);\n\nfunction GameProvider({ children }) {\n  const [state, dispatch] = usePersistReducer(\n    persistenceSettings,\n    mainReducer,\n    initialState,\n  );\n\n  const initGame = useCallback(\n    (level, numCols, seconds) => {\n      dispatch({\n        type: 'INIT_GAME',\n        payload: {\n          level,\n          numCols,\n          seconds,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const resetGame = useCallback(() => {\n    dispatch({\n      type: 'RESET_GAME',\n    });\n  }, [dispatch]);\n\n  const clearBoard = useCallback(() => {\n    dispatch({\n      type: 'CLEAR_BOARD',\n    });\n  }, [dispatch]);\n\n  const finishGame = useCallback(\n    (level, startDate, finishDate) => {\n      dispatch({\n        type: 'FINISH_GAME',\n        payload: {\n          startDate,\n          finishDate,\n          level,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const enableBoard = useCallback(() => {\n    dispatch({\n      type: 'ENABLE_BOARD',\n    });\n  }, [dispatch]);\n\n  const disableBoard = useCallback(() => {\n    dispatch({\n      type: 'DISABLE_BOARD',\n    });\n  }, [dispatch]);\n\n  const addOneFlip = useCallback(\n    level => {\n      dispatch({\n        type: 'ADD_FLIP',\n        payload: {\n          level,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const addOneMatch = useCallback(\n    level => {\n      dispatch({\n        type: 'ADD_MATCH',\n        payload: {\n          level,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const addWrongMatch = useCallback(\n    level => {\n      dispatch({\n        type: 'ADD_WRONG_MATCH',\n        payload: {\n          level,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const addWin = useCallback(\n    level => {\n      dispatch({\n        type: 'ADD_WIN',\n        payload: {\n          level,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const addAbandon = useCallback(\n    level => {\n      dispatch({\n        type: 'ADD_ABANDON',\n        payload: {\n          level,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const addLost = useCallback(\n    level => {\n      dispatch({\n        type: 'ADD_LOST',\n        payload: {\n          level,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const addFlippedCard = useCallback(\n    id => {\n      dispatch({\n        type: 'ADD_FLIPPED_CARD',\n        payload: {\n          id,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  const removeFlippedCard = useCallback(\n    id => {\n      dispatch({\n        type: 'REMOVE_FLIPPED_CARD',\n      });\n    },\n    [dispatch],\n  );\n\n  const addSolvedCards = useCallback(\n    id => {\n      dispatch({\n        type: 'ADD_SOLVED_CARDS',\n        payload: {\n          id,\n        },\n      });\n    },\n    [dispatch],\n  );\n\n  return (\n    <GameContext.Provider\n      value={{\n        addWin,\n        addLost,\n        initGame,\n        resetGame,\n        addAbandon,\n        addOneFlip,\n        clearBoard,\n        finishGame,\n        addOneMatch,\n        enableBoard,\n        disableBoard,\n        addWrongMatch,\n        addFlippedCard,\n        addSolvedCards,\n        removeFlippedCard,\n        ...state,\n      }}\n    >\n      {children}\n    </GameContext.Provider>\n  );\n}\n\nGameProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst GameConsumer = GameContext.Consumer;\n\nexport { GameContext, GameProvider, GameConsumer };\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n  useRef,\n} from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport './index.css';\n\nimport { GameContext } from '../../store/GameContext';\nimport GameStates from '../../constants/GameStates';\n\nlet countdown;\n\nfunction Countdown({ isEnabled, onGameOver, progressBar }) {\n  const fillEl = useRef(null);\n  const { addLost, game } = useContext(GameContext);\n  const [secondsLeft, setSecondsLeft] = useState(game.seconds);\n\n  const displayTimer = useCallback(() => {\n    if (progressBar) {\n      const perc = secondsLeft / game.seconds;\n      fillEl.current.style.transform = `scaleX(${perc})`;\n    } else {\n      const minutes = Math.floor(secondsLeft / 60);\n      const remainder = secondsLeft % 60;\n      const display = `${minutes}:${remainder < 10 ? '0' : ''}${remainder}`;\n      fillEl.current.textContent = display;\n    }\n  }, [game.seconds, progressBar, secondsLeft]);\n\n  useEffect(() => {\n    clearInterval(countdown);\n\n    const then = game.startDate + game.seconds * 1000;\n    displayTimer();\n\n    countdown = setInterval(() => {\n      setSecondsLeft(Math.round((then - Date.now()) / 1000));\n      if (secondsLeft <= 1) {\n        onGameOver();\n        clearInterval(countdown);\n        return;\n      }\n\n      if (game.gameState === GameStates.FINISHED) {\n        clearInterval(countdown);\n        return;\n      }\n\n      displayTimer();\n    }, 1000);\n\n    return () => {\n      clearInterval(countdown);\n    };\n  }, [\n    game.seconds,\n    game.gameState,\n    displayTimer,\n    onGameOver,\n    game.startDate,\n    secondsLeft,\n    game.level,\n    addLost,\n  ]);\n\n  return (\n    <div className=\"w-full max-w-xl\">\n      {progressBar && (\n        <div className=\"ProgressBar w-full max-w-xl bg-blue-500 p-1 rounded shadow\">\n          <span\n            className=\"ProgressBar__Fill block h-2 rounded bg-blue-300\"\n            ref={fillEl}\n          />\n        </div>\n      )}\n      {progressBar || (\n        <p className=\"w-full max-w-xl text-center\" ref={fillEl} />\n      )}\n    </div>\n  );\n}\n\nCountdown.propTypes = {\n  isEnabled: PropTypes.bool.isRequired,\n  onGameOver: PropTypes.func.isRequired,\n  progressBar: PropTypes.bool,\n};\n\nCountdown.defaultProps = {\n  progressBar: true,\n};\n\nexport default Countdown;\n","import React, { useContext } from 'react';\n\nimport './index.css';\n\nimport { GameContext } from '../../store/GameContext';\n\nconst pad = (number, size) => {\n  let s = String(number);\n  while (s.length < (size || 2)) {\n    s = `0${s}`;\n  }\n  return s;\n};\nconst timeConverter = miliseconds => {\n  const minutes = Math.floor(miliseconds / 60000);\n  const seconds = Math.floor((miliseconds % 60000) / 1000);\n  const mili = miliseconds % 1000;\n\n  return `${pad(minutes, 2)}:${pad(seconds, 2)}:${pad(mili, 3)}`;\n};\n\nfunction Stats(props) {\n  const { persist } = useContext(GameContext);\n  const levels = Object.keys(persist);\n\n  const totals = levels.reduce(\n    (acc, level) => {\n      acc.wins += persist[level].wins;\n      acc.lost += persist[level].lost;\n      acc.abandoned += persist[level].abandoned;\n      acc.flips += persist[level].totalFlips;\n      acc.wrongMatches += persist[level].wrongMatches;\n      acc.matches += persist[level].totalMatches;\n\n      return acc;\n    },\n    { wins: 0, lost: 0, abandoned: 0, flips: 0, wrongMatches: 0, matches: 0 },\n  );\n\n  const bestTimes = levels.map(level => {\n    return (\n      <div className=\"flex\" key={level}>\n        <div className=\"Stats__Label\">{`Best ${level.toLowerCase()}: `}</div>\n        <div className=\"Stats__Value relative w-full relative w-full\">\n          <div className=\"Stats__Total absolute flex\">\n            {`${timeConverter(persist[level].bestTime)}`}\n          </div>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"Stats__Container w-full max-w-xl flex flex-col\">\n      <div className=\"Stats__Totals flex flex-col\">\n        <div className=\"Stats__Totals_scores\">\n          <div className=\"Stats flex\">\n            <div className=\"Stats__Label\">Wins:</div>\n            <div className=\"Stats__Value relative w-full relative w-full\">\n              <div className=\"Stats__Total absolute flex\">{totals.wins}</div>\n              <div className=\"Stats__Levels absolute flex\">\n                {levels.map(level => (\n                  <span className=\"pl-1\" key={`wins${level}`}>\n                    {`${level[0]}: ${persist[level].wins}`}\n                  </span>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"Stats flex\">\n            <div className=\"Stats__Label\">Lost:</div>\n            <div className=\"Stats__Value relative w-full\">\n              <div className=\"Stats__Total absolute flex\">{totals.lost}</div>\n              <div className=\"Stats__Levels absolute flex\">\n                {levels.map(level => (\n                  <span className=\"pl-1\" key={`lost${level}`}>\n                    {`${level[0]}: ${persist[level].lost}`}\n                  </span>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"Stats flex\">\n            <div className=\"Stats__Label\">Left:</div>\n            <div className=\"Stats__Value relative w-full\">\n              <div className=\"Stats__Total absolute flex\">\n                {totals.abandoned}\n              </div>\n              <div className=\"Stats__Levels absolute flex\">\n                {levels.map(level => (\n                  <span className=\"pl-1\" key={`left${level}`}>\n                    {`${level[0]}: ${persist[level].abandoned}`}\n                  </span>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"Stats__Totals_flips\">\n          <div className=\"Stats flex\">\n            <div className=\"Stats__Label\">Flips:</div>\n            <div className=\"Stats__Value relative w-full\">\n              <div className=\"Stats__Total absolute flex\">{totals.flips}</div>\n              <div className=\"Stats__Levels absolute flex\">\n                {levels.map(level => (\n                  <span className=\"pl-1\" key={`flips${level}`}>\n                    {`${level[0]}: ${persist[level].totalFlips}`}\n                  </span>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"Stats flex\">\n            <div className=\"Stats__Label\">Wrong Matches:</div>\n            <div className=\"Stats__Value relative w-full\">\n              <div className=\"Stats__Total absolute flex\">\n                {totals.wrongMatches}\n              </div>\n              <div className=\"Stats__Levels absolute flex\">\n                {levels.map(level => (\n                  <span className=\"pl-1\" key={`wrongMatches_${level}`}>\n                    {`${level[0]}: ${persist[level].wrongMatches}`}\n                  </span>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"Stats flex\">\n            <div className=\"Stats__Label\">Matches:</div>\n            <div className=\"Stats__Value relative w-full\">\n              <div className=\"Stats__Total absolute flex\">{totals.matches}</div>\n              <div className=\"Stats__Levels absolute flex\">\n                {levels.map((level, index) => (\n                  <span className=\"pl-1\" key={`totalMatches_${level}`}>\n                    {`${level[0]}: ${persist[level].totalMatches}`}\n                  </span>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"Stats__BestTimes\">{bestTimes}</div>\n    </div>\n  );\n}\n\nexport default Stats;\n","import React, { useCallback, useContext } from 'react';\n\nimport Menu from '../Menu';\nimport Board from '../Board';\n\nimport { GameContext } from '../../store/GameContext';\n\nimport GameStates from '../../constants/GameStates';\n\nimport Countdown from '../../Components/Countdown';\nimport Stats from '../../Components/Stats';\n\nfunction App() {\n  const {\n    game,\n    addWin,\n    addLost,\n    initGame,\n    resetGame,\n    addAbandon,\n    addOneFlip,\n    clearBoard,\n    finishGame,\n    addOneMatch,\n    enableBoard,\n    disableBoard,\n    addWrongMatch,\n    addFlippedCard,\n    addSolvedCards,\n    removeFlippedCard,\n  } = useContext(GameContext);\n\n  const handleInitGame = useCallback(\n    (level, num, secs) => {\n      initGame(level, num, secs);\n      addAbandon(level);\n    },\n    [addAbandon, initGame],\n  );\n\n  const sameCardFlipped = useCallback(id => game.flipped.includes(id), [\n    game.flipped,\n  ]);\n\n  const isMatch = useCallback(\n    id => {\n      const clickedCard = game.deck.find(card => card.id === id);\n      const flippedCard = game.deck.find(card => card.id === game.flipped[0]);\n      return clickedCard.type === flippedCard.type;\n    },\n    [game.deck, game.flipped],\n  );\n\n  const checkWin = useCallback(() => {\n    if (game.solved.length === game.numCols * game.numCols - 2) {\n      addWin(game.level);\n      setTimeout(() => {\n        clearBoard();\n      }, 500);\n      setTimeout(() => {\n        finishGame(game.level, game.startDate, Date.now() - 500);\n        resetGame();\n      }, 1200);\n    }\n  }, [\n    addWin,\n    clearBoard,\n    finishGame,\n    game.level,\n    game.numCols,\n    game.solved.length,\n    game.startDate,\n    resetGame,\n  ]);\n\n  const checkGameOver = useCallback(() => {\n    if (\n      game.solved.length !== game.numCols * game.numCols - 2 &&\n      game.gameState === GameStates.PLAYING\n    ) {\n      addLost(game.level);\n      setTimeout(() => {\n        clearBoard();\n      }, 500);\n      setTimeout(() => {\n        resetGame();\n      }, 1200);\n    }\n  }, [\n    addLost,\n    clearBoard,\n    game.gameState,\n    game.level,\n    game.numCols,\n    game.solved.length,\n    resetGame,\n  ]);\n\n  const handleFlip = useCallback(\n    id => {\n      disableBoard();\n      if (game.flipped.length === 0) {\n        addOneFlip(game.level);\n        addFlippedCard(id);\n        enableBoard();\n      } else {\n        addOneFlip(game.level);\n        if (sameCardFlipped(id)) {\n          enableBoard();\n          return;\n        }\n        addFlippedCard(id);\n        if (isMatch(id)) {\n          addOneMatch(game.level);\n          addSolvedCards(id);\n          removeFlippedCard();\n          checkWin();\n          enableBoard();\n        } else {\n          addWrongMatch(game.level);\n          setTimeout(() => {\n            removeFlippedCard();\n          }, 500);\n          enableBoard();\n        }\n      }\n    },\n    [\n      addFlippedCard,\n      addOneFlip,\n      addOneMatch,\n      addSolvedCards,\n      addWrongMatch,\n      checkWin,\n      disableBoard,\n      enableBoard,\n      game,\n      isMatch,\n      removeFlippedCard,\n      sameCardFlipped,\n    ],\n  );\n\n  return (\n    <div className=\"App w-screen h-screen flex flex-col items-center justify-center\">\n      {game.gameState === GameStates.MENU && (\n        <React.Fragment>\n          <Menu onInitGame={handleInitGame} />\n          <Stats />\n        </React.Fragment>\n      )}\n      {game.gameState === GameStates.PLAYING && (\n        <React.Fragment>\n          <Board\n            cards={game.deck}\n            onFlip={handleFlip}\n            numCols={game.numCols}\n            solvedCards={game.solved}\n            flippedCards={game.flipped}\n            isEnabled={game.isBoardEnabled}\n          />\n          <Countdown\n            progressBar={false}\n            seconds={game.seconds}\n            onGameOver={checkGameOver}\n            isEnabled={game.gameState === GameStates.PLAYING}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './Containers/App';\n\nimport { GameProvider } from './store/GameContext';\n\nconst app = (\n  <GameProvider>\n    <App />\n  </GameProvider>\n);\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}